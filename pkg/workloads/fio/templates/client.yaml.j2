---
kind: Job
apiVersion: batch/v1
metadata:
  name: 'fio-client-{{ trunc_uuid }}'
  namespace: '{{ namespace }}'
spec:
  backoffLimit: 0
  activeDeadlineSeconds: {{ workload_args.job_timeout|default(3600) }}
  template:
    metadata:
      labels:
        benchmark-uuid: "{{ uuid }}"
        app: "fiod-client-{{ trunc_uuid }}"
{% if workload_args.Annotations or workload_args.ClientAnnotations %}
      annotations:
{% for annotation, value in workload_args.Annotations %}
        "{{annotation}}": "{{value}}"
{% endfor %}
{% for annotation, value in workload_args.ClientAnnotations %}
        "{{annotation}}": "{{value}}"
{% endfor %}
{% endif %}
    spec:
{% if workload_args.RuntimeClass %}
      runtimeClassName: "{{ workload_args.RuntimeClass }}"
{% endif %}
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: fio-client
        image: {{ workload_args.Image | default('quay.io/cloud-bulldozer/fio:latest') }}
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL
        env:
          - name: uuid
            value: "{{ uuid }}"
          - name: test_user
            value: "{{ test_user | default('ripsaw') }}"
          - name: clustername
            value: "{{ clustername }}"
          - name: ceph_cache_drop_pod_ip
            value: "{{ workload_args.rook_ceph_drop_cache_pod_ip | default() }}"
          - name: kcache_drop_pod_ips
            value: "{{ kcache_drop_pod_ips | default() }}"
          - name: KCACHE_DROP_PORT_NUM
            value: "{{ kernel_cache_drop_svc_port }}"
{% if ceph_osd_cache_drop_pod_ip is defined %}
          - name: ceph_osd_cache_drop_pod_ip
            value: "{{ ceph_osd_cache_drop_pod_ip }}"
          - name: CEPH_CACHE_DROP_PORT_NUM
            value: "{{ ceph_cache_drop_svc_port }}"
{% endif %}
{% if elasticsearch %}
          - name: es
            value: "{{ elasticsearch.url | default('DEBUG_NO_URL') }}"
          - name: es_index
            value: "{{ elasticsearch.index_name | default('ripsaw-fio') }}"
          - name: es_verify_cert
            value: "{{ elasticsearch.verify_cert | default(true) }}"
          - name: parallel
            value: "{{ elasticsearch.parallel | default(false) }}"
{% endif %}
{% if prometheus is defined %}
          - name: prom_token
            value: "{{ prometheus.prom_token | default() }}"
          - name: prom_url
            value: "{{ prometheus.prom_url | default() }}"
{% endif %}
        command: ["/bin/sh", "-c"]
        args:
          - "cat /tmp/host/hosts;
{% if workload_args.BSRange %}
{% for numjobs in workload_args.NumJobs %}
{% for i in workload_args.BSRange %}
{% for job in workload_args.Jobs %}
             cat /tmp/fio/fiojob-{{job}}-{{i}}-{{numjobs}}; mkdir -p /tmp/fiod-{{uuid}}/fiojob-{{job}}-{{i}}-{{numjobs}};
             run_snafu -t fio -H /tmp/host/hosts -j /tmp/fio/fiojob-{{job}}-{{i}}-{{numjobs}} -s {{workload_args.Samples}} -d /tmp/fiod-{{ uuid }}/fiojob-{{job}}-{{i}}-{{numjobs}} -v;
{% if workload_args.FioJSONToLog %}
             for fio_sample in $(seq 1 {{workload_args.Samples}});
             do echo START_FIO_JSON_OUTPUT_fiod-{{uuid}}_fiojob-{{job}}-{{i}}-{{numjobs}}_SAMPLE_$fio_sample;
             test -f /tmp/fiod-{{uuid}}/fiojob-{{job}}-{{i}}-{{numjobs}}/$fio_sample/{{job}}/fio-result.json && cat /tmp/fiod-{{uuid}}/fiojob-{{job}}-{{i}}-{{numjobs}}/$fio_sample/{{job}}/fio-result.json || echo ERROR_FIO_JSON_FILE_NOT_AVAILABLE;
             echo END_FIO_JSON_OUTPUT_fiod-{{uuid}}_fiojob-{{job}}-{{i}}-{{numjobs}}_SAMPLE_$fio_sample;done;
{% endif %}
{% endfor %}
{% endfor %}
{% endfor %}
{% else %}
{% for numjobs in workload_args.NumJobs %}
{% for i in workload_args.BS %}
{% for job in workload_args.Jobs %}
             cat /tmp/fio/fiojob-{{job}}-{{i}}-{{numjobs}}; mkdir -p /tmp/fiod-{{uuid}}/fiojob-{{job}}-{{i}}-{{numjobs}};
             run_snafu -t fio -H /tmp/host/hosts -j /tmp/fio/fiojob-{{job}}-{{i}}-{{numjobs}} -s {{workload_args.Samples}} -d /tmp/fiod-{{ uuid }}/fiojob-{{job}}-{{i}}-{{numjobs}} -v;
{% if workload_args.FioJSONToLog %}
             for fio_sample in $(seq 1 {{workload_args.Samples}});
             do echo START_FIO_JSON_OUTPUT_fiod-{{uuid}}_fiojob-{{job}}-{{i}}-{{numjobs}}_SAMPLE_$fio_sample;
             test -f /tmp/fiod-{{uuid}}/fiojob-{{job}}-{{i}}-{{numjobs}}/$fio_sample/{{job}}/fio-result.json && cat /tmp/fiod-{{uuid}}/fiojob-{{job}}-{{i}}-{{numjobs}}/$fio_sample/{{job}}/fio-result.json || echo ERROR_FIO_JSON_FILE_NOT_AVAILABLE;
             echo END_FIO_JSON_OUTPUT_fiod-{{uuid}}_fiojob-{{job}}-{{i}}-{{numjobs}}_SAMPLE_$fio_sample;done;
{% endif %}
{% endfor %}
{% endfor %}
{% endfor %}
{% endif %}
             echo run finished"
        volumeMounts:
        - name: fio-volume
          mountPath: "/tmp/fio"
        - name: host-volume
          mountPath: "/tmp/host"
      volumes:
      - name: fio-volume
        configMap:
          name: "fio-test-{{ trunc_uuid }}"
          defaultMode: 0777
      - name: host-volume
        configMap:
          name: "fio-hosts-{{ trunc_uuid }}"
          defaultMode: 0777
      restartPolicy: Never
